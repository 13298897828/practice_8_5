//
//  main.m
//  Lesson_8_5_real
//
//  Created by lanou3g on 15/8/5.
//  Copyright (c) 2015年 lanou3g. All rights reserved.
//

#import <Foundation/Foundation.h>
#pragma mark  结构体
//1. 声明 结构体
// struct 关键字 用来声明一个结构体.

// 结构体式的作用:管理 多个数据信息.
//2.定义 结构体
//struct student{
//    int num;   //成员变量. 成员变量之间 使用 ; 隔开
//    int age;
//    char name[15];
//    float score;
//};  //结束有   ;
//
//struct teacher{
//    char name[15];
//    char gender;
//    int num;
//    int age;
//    
//};
#pragma mark     typedef 原类型名 新类型名;
//  改变类型名称
// 第一种
//typedef float ff;
//
//struct animal{
//    char name[15];
//    int leg ;
//    int tail;
//    
//};
//typedef struct animal animal;   //重命名
////第二种
//typedef struct food{
//    char name[20];
//    char color[10];
//    char taste[10];
//    float price;
//    
//}food;
//typedef struct Movie{
//    char name[20];
//    char daoYan[20];
//    float price;
//    
//}Movie;
typedef struct student{
    char name[20];
    int age;
    float score;
}student;
//日期结构体
//typedef  struct Date{
//    int year;
//    int month;
//    int day;
//}Date;
#pragma mark  结构体嵌套
//人结构体

//typedef struct person{
//    char name[20];
//    int age;
//    char gender;
//    Date birthday;
//}person;
#pragma mark 结构体数组!
// 数组的元素都是结构体类型的




int main(int argc, const char * argv[]) {
    
//    ff a1 = 1.2;
//    printf("%f\n",a1);
//  3.初始化
//    1).谁知初始值使用{}
//    2).按照成员变量的顺序赋值
//    3).可以不设置信息,使用{0};
//    stu.num =50;
//    struct student stu1 = {05,24,"ZhangTianqi",88};
//    struct student stu2 = {02,90,"SunJude",59.9};
//    struct student stu3 = {0};
//    
//    
//    struct teacher teacher1 = {"LuoFeng",'m',2,18};
//    struct teacher teacher2 = {"Bobo",'m',0,38};
//    struct teacher teacher3 = {0};
////   1. 相同的结构体类型变量可以相互赋值,          !!!除了数组名!!!!!
//    stu3.age = stu1.age;
//    printf("%d\n",stu3.age);
//    teacher3 = teacher2;
//    2.结构体变量定义以后.不能整体赋值,只能给成员变量赋值
//    teacher3 = {06,24,"ZhangTianqiYA",88}
//    char a[4]= "asf";
//    for (int i = 0; i < 4; i ++) {
//        teacher3.name[i] =a[i];
//    }
//    printf("%s,%c,%d,%d\n",teacher3.name,teacher3.gender,teacher3.num,teacher3.age);
//   
//  //  stu = {08,20,"shei",80};
//    return 0;

//    animal a1 = {"monkey",4,1};
//    animal a2 = {"fox",4,9};
//    animal a3 = {"Huba",2,1};
//   food yuXiangRose = {"Rose'yuxiang","colorful","tian",20};
//    访问结构体成员变量.
//    1.不能使用 结构体变量  输出所有成员变量
//     food LaTiao = {"weiLong","colorful","la",1};
//     strcpy(LaTiao.name, "juDe");   //修改字符串类型的成员变量的值
////    2.访问结构体变量,  . 出成员变量
////    3.成员变量和其他基本类型变量一样使用
//    LaTiao.price = 0.1;
//    printf("%s  %s  %f\n",LaTiao.name,LaTiao.color,LaTiao.price);
//    Movie movie = {"zhuoYaoJi","buZhiDao",40};
//    Movie movie1 = {"zhuoYaoJi1","buZhiDao1",401};
//    strcpy(movie.daoYan, "Cheng?");
//    movie.price = 88;
//    printf("%s %s %.2f\n",movie.name,movie.daoYan,movie.price);
//    movie1 = movie;   //在初始化之后不能整体赋值,但是 用 = 可以 ,下面那行那种不行
////    movie1 = {"sdf","dsfgf",100};
//     printf("%s %s %.2f\n",movie1.name,movie1.daoYan,movie1.price);
//
//    student stu1 = {"xiaoQiang",18,80.5};
//    student stu2 = {"xiaoMing",20,90.8};
//    student stu3  ={"xiaoGang",19,85};
//    student max,max1;
//     max = stu1.score > stu2.score ? stu1 :stu2;
//     max1 = stu3.score > max.score ?stu3 :max;
//    
//        printf("成绩最高的是:%s 年龄是:%d 成绩是:%f\n",max1.name,max1.age,max1.score);
//   
//    
//    
//    student min ,min1;
//    min = stu1.age < stu2.age ?stu1:stu2;
//    min1 = stu3.age < min.age ?stu3 :min;
//    printf("年龄最小的是:%s %d %f\n",min1.name,min1.age,min1.score);
//    person per1 = {"tt",18,'m'};
//    person per2 = {"qq",20,'f'};
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
//    strcpy(per1.name, "aa");
//    per1.age = 10;
//    per1.gender = 'f';
//    printf("%s %d %c\n",per1.name,per1.age,per1.gender);
//    person maxa = {0};
//    maxa = per1.age > per2.age ?per1 :per2;
//    printf("%s  %d %c\n",maxa.name,maxa.age,maxa.gender);
    
    
//    person per1 = {"name",18,'m',{1990,2,3}};
//    person per2 = {"wangXiaoMing",30,'f',{1885,2,2}};
//    printf("%d %d %d\n",per1.birthday.year,per1.birthday.month,per1.birthday.day);
//    per2.birthday.day = 11;
//    per2.birthday.month = 11;
//    printf(" %s %d %c %d %d %d\n",per2.name,per2.age,per2.gender,per2.birthday.year,per2.birthday.month,per2.birthday.day);
    
    student stu[5] = {{"xiaoMing",20,88},{"xiaoGang",19,60},{"xiaoLing",18,99},{"xiaoHui",18,100},{"xiaoLong",30,67}};
//    访问元素个数:stu[下标] 访问元素.
//    for (int i = 0; i < 5; i ++) {
//        printf("%s %d %.2f\n",stu[i].name,stu[i].age,stu[i].score);
//    }
//    按照成绩排序
    student t;
    for (int i = 0; i < 4; i ++) {
        for (int j = 0; j < 4- i; j ++) {
            if (stu[j].score < stu[j + 1].score) {
                 t = stu[j];
                stu[j] = stu[j + 1];
                stu[j + 1] = t;
            }
        }
    }
    for (int i = 0; i < 5; i ++) {
        printf("%s %d %.2f\n",stu[i].name,stu[i].age,stu[i].score);
    }
////    找成绩最高的
//    student max = stu[0];
//    for (int i = 0; i < 5; i ++) {
//        if (max.score < stu[i].score) {
//            max = stu[i];
////            max = stu[i].score > max.score ?max :stu[i];
//        }
//    }
//    printf("\n成绩最高的是:%s %d %.2f\n",max.name,max.age,max.score);
//    
//    student min = stu[0];
//    for (int i = 0; i < 5; i ++) {
//        if (min.age > stu[i].age) {
//            min = stu[i];
//        }
//    }
//    printf("年龄最小的有:\n");
//    for (int i = 0; i < 5; i ++) {
//        if (stu[i].age == min.age) {
//            printf("%s %d %f\n",stu[i].name,stu[i].age,stu[i].score);
//        }
//    }
    
    
   }
